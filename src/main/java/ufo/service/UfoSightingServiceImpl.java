package ufo.service;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.function.Function;
import java.util.stream.Collectors;

import ufo.cache.CacheManager;
import ufo.dto.UfoSighting;

/**
 * Implementation class which search ufo sightings directly on TSV file.
 * 
 * 
 * 
 * @author lpasquinelli
 *
 */
public class UfoSightingServiceImpl implements UfoSightingService {
	private final String CACHE_ENTRY = "AllSightings";

	public UfoSightingServiceImpl() {
	}

	/**
	 * This method return all the sightings readed from the TSV file.
	 * This is the second version which basically use a CacheManager to boost
	 * application performance.
	 * Previsous version contains exactly the code of method loadAllSightings.
	 *  
	 */
	@Override
	public List<UfoSighting> getAllSightings() {
		if(CacheManager.getInstance().getEntry(CACHE_ENTRY) == null) {
			CacheManager.getInstance().addEntry(CACHE_ENTRY, loadAllSightings());
		}
		
		return (List<UfoSighting>) CacheManager.getInstance().getEntry(CACHE_ENTRY);
	}

	private List<UfoSighting> loadAllSightings() {
		List<UfoSighting> inputList = new ArrayList<UfoSighting>();
		
		try (BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(getClass().getClassLoader().getResourceAsStream("ufo_awesome.tsv")))) {
			inputList = bufferedReader.lines().map(mapToItem).collect(Collectors.toList());
			// we remove empty object generated by wrong row 
			inputList.removeIf(Objects::isNull);
		} catch (IOException ioException) {
			System.err.println(ioException.getMessage());
		}
		return inputList;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UfoSighting> search(int yearSeen, int monthSeen) {
		DecimalFormat df = new DecimalFormat("00");

		return getAllSightings().stream().filter(p -> p.getDateSeen().startsWith("" + yearSeen + df.format(monthSeen))).collect(Collectors.toList());
	}

	/**
	 * Function to instantiate an UfoSighting from single csv line. 
	 */
	private Function<String, UfoSighting> mapToItem = (line) -> {
		String[] p = line.split("\t");

		if (p.length ==4) {
			return null;
		}

		return new UfoSighting(p[0], p[1], p[2], p[3], p[4], p[5]);
	};
}
